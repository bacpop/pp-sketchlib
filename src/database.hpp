/*
 *
 * database.hpp
 * Header file for database.cpp
 * Interface between sketches and HDF5 store
 * 
 */
#pragma once

#include <cstdint>
#include <cstddef>
#include <cstring>
#include <vector>
#include <unordered_map>
#include <string>

#include <highfive/H5File.hpp>

#include "version.h" // Generated by compiler
#include "reference.hpp"

const char DEFAULT_VERSION[41] = "ca0b581b852cc70a474fbcc0b38be80cf8538ad0";
const size_t DEFAULT_LENGTH = 3000000;

class Database 
{
    public:
        Database(const std::string& filename); // Overwrite or create new H5 file
        Database(HighFive::File& _h5_file); // Open a H5 file
        
        void add_sketch(const Reference& ref); // Write a new sketch to the HDF5
        Reference load_sketch(const std::string& name); // Retrieve a sketch
        char* version_cstr() const { return _version_hash; }
        bool check_version(const Database& db2) const { return strcmp(_version_hash, db2.version_cstr()) == 0; }

    private:
        std::string _filename;
        char* _version_hash;
        HighFive::File _h5_file;
};

HighFive::File open_h5(const std::string& filename);
